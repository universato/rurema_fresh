#!/usr/bin/env ruby

require_relative '../lib/rurema_fresh.rb'

# サブコマンドで条件分岐
case ARGV[0]
when "versions"
  # rurema_fresh versions ./refm/api/src/_builtin/Array --ruby=2.4.0
  # puts "rurema_freshコマンドを実行するよ"
  ARGV.shift # => "version"
  options = RuremaFresh.options
  support_version = options[:ruby] || RuremaFresh::DEFAULT_SUPPORT_VERSION

  if file_path = ARGV.shift
    begin
      buffer = IO.read(file_path)
    rescue Errno::ENOENT
      puts file_path
      puts "このコマンド引数のファイルを探しましたが見つからなかったので、終了します。"
      exit
    end

    new_buffer = RuremaFresh.remove_old_versions(buffer, support_version)
    IO.write(file_path, new_buffer)

    if new_buffer.size == buffer.size
      puts file_path
      puts "上記のファイルについて、Ruby#{support_version}より古い条件分岐はありませんでした。"
    else
      puts file_path
      puts "上記のファイルについて、Ruby#{support_version}より古い条件分岐があり、"
      puts "#{buffer.lines.size - new_buffer.lines.size}行、削除しました。"
    end
  else
    puts "rurema_fresh versions の後ろにファイル名を入れてコマンドを打ってください"
    puts "なお、デフォルトの最低サポートバージョンは、#{RuremaFresh::DEFAULT_SUPPORT_VERSION}です。"
    puts "これより古い分岐となるものは、削除されます。"
    puts "サポートしたいバージョンを変更したい場合は、--ruby=2.0.0 のように変更してください。"
    puts "指定されたバージョンより古い分岐は、削除されます。"
  end
else
  if ARGV.empty?
    puts "rurema_fresh は、versions サブコマンドを持ちます。"
    puts "次のように使えます。"
    puts "rurema_fresh versions ./refm/api/src/_builtin/Array --ruby=2.4.0"
    puts "疑問点があったら、ruby-jpのruremaチャンネルやGitHubで聞いてください"
    pp RuremaFresh::HELP_URLS
  else
    begin
      options = RuremaFresh.options
      if options == {} && ARGV[0]
        puts "#{ARGV[0]} <- There is no such a subcommand in rurema_fresh
        exit
      end
    rescue OptionParser::MissingArgument => e
      puts e.inspect
      puts "サポートしてないオプションが入力されてました"
    end
  end
end
